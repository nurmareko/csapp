// long P(long x)
// x in %rdi
 1 P:
 2   pushq	%r15			// Save initial value of %r15
 3   pushq	%r14			// Save initial value of %r14
 4   pushq	%r13			// Save initial value of %r13
 5   pushq	%r12			// Save initial value of %r12
 6   pushq	%rbp			// Save initial value of %rbp
 7   pushq	%rbx			// Save initial value of %rbx
 8   subq	$24, %rsp		// Align stack frame
 9   movq	%rdi, %rbx		// Store a0 in %rbx
10   leaq	1(%rdi), %r15		// Store a1 in %r15
11   leaq	2(%rdi), %r14		// Store a2 in %r14
12   leaq	3(%rdi), %r13		// Store a3 in %r13
13   leaq	4(%rdi), %r12		// Store a4 in %r12
14   leaq	5(%rdi), %rbp		// Store a5 in %rbp
15   leaq 	6(%rdi), %rax		// Borrow a register because we cannot have both memory location as source and destination
16   movq 	%rax, (%rsp)		// Store a6 on stack with 0 offset
17   leaq 	7(%rdi), %rdx		// Borrow a register because we cannot have both memory location as source and destination
18   movq 	%rdx, 8(%rsp)		// Store a7 on stack with 8 offset
19   movl 	$0, %eax		// ??? set return value to 0 because procedure Q doesn't take argument and return void ???  
20   call 	Q			// Call Q()

=========================================================================
why does local values a0-a7 need to stored at calle-saved registers?

 
=========================================================================

A. Identify which local values get stored in callee-saved registers.

answer: a0, a1, a2, a3, a4, a5

B. Identify which local values get stored on the stack.

answer: a6, a7

C. Explain why the program could not store all of the local values in
   callee-saved registers.

answer: because there are only 6 calle-saved registers the rest will be
        stored on the stack