typedef union {
	struct {
		long   u;
		short  v;
		char   w;
	} t1;
	struct {
		int a[2];
		char  *p;
	} t2;
} u_type;

========================================================================

void get(u_type *up, type *dest) {
	*dest = expr;
}

========================================================================

void get(u_type *up, long *dest) {
	*dest = up->t1.u;
}

========================================================================
// up in %rdi, dest in %rsi

expr			type	Code
up->t1.u		long	movq (%rdi), %rax
				movq %rax, (%rsi)

up->t1.v		short	movw 8(%rdi), %ax
				movw %ax, (%rsi)

&up->t1.w		char*	addq %10, %rdi
				movq %rdi, (%rsi)
				
up->t2.a		int*	movq %rdi, (%rsi)

up->t2.a[up->t1.u]	int	movq (%rdi), %rax
				movl (%rdi, %rax, 4), %eax
				movl %eax, (%rsi)

*up->t2.p		char	movq 8(%rdi), %rax
				movb (%rax), %al
				movb %al, (%rsi)




