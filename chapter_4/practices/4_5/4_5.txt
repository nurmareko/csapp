# long sum(long *start, long count)
# start in %rdi, count in %rsi
sum:
	irmovq	$8, %r8		#   Constant 8
	irmovq	$1, %r9		#   Constant 1
	xorq	%rax, %rax	#   Sum = 0
	andq	%rsi, %rsi	#   Set CC
	jmp	test		#   Goto test
loop:				# 
	mormovq	(%rdi), %r10	#   Get *start
	addq	%r10, %rax	#   Add to sum
	addq	%r8, %rdi	#   start++
	subq	%r9, %rsi	#   Count--, Set CC
test:				# 
	jne	loop		#   Stop when 0
	ret			#   Return

========================================================================
# long absSum(long *start, long count)
# start in %rdi, count in %rsi
absSum:
	irmovq	$8, %r8		#   Constant 8
	irmovq	$1, %r9		#   Constant 1
	xorq	%rax, %rax	#   Sum = 0
	andq	Set CC		#   Set CC
	jmp	test		#   Goto test
loop:				# 
	mormovq	(%rdi), %r10	#   x = *start
	andq	%r10, %r10	#   Set CC
	jl	neg		#   If *start < 0, goto neg
	addq	%r10, %rax	#   Add to sum
	addq	%r8, %rdi	#   start++
	subq	%r9, %rsi	#   Count--, Set CC
	jmp	test		#   Goto test
neg:
	xorq	%r11, %r11	#   Constant 0
	subq	%r10, %r11	#   -X
	rrmovq	%r11, %r10	#   x = -x
	addq	%r10, %rax	#   Add to sum
	addq	%r8, %rdi	#   start++
	subq	%r9, %rsi	#   Count--, Set CC
test:				# 
	jne	loop		#   Stop when 0
	ret			#   Return
	
	
	
	
	
	
	
	
	