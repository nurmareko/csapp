# long sum(long *start, long count)
# start in %rdi, count in %rsi
sum:
	irmovq	$8, %r8		#   Constant 8
	irmovq	$1, %r9		#   Constant 1
	xorq	%rax, %rax	#   Sum = 0
	andq	%rsi, %rsi	#   Set CC
	jmp	test		#   Goto test
loop:				# 
	mrmovq	(%rdi), %r10	#   Get *start
	addq	%r10, %rax	#   Add to sum
	addq	%r8, %rdi	#   start++
	subq	%r9, %rsi	#   Count--, Set CC
test:				# 
	jne	loop		#   Stop when 0
	ret			#   Return

========================================================================
# long absSum(long *start, long count)
# start in %rdi, count in %rsi
absSum:
	irmovq	$8, %r8		# Constant 8
	irmovq	$1, %r9		# Constant 1
	xorq	%r10, %r10	# Constant 0
	xorq	%rax, %rax	# Sum = 0
	andq	%rsi, %rsi	# Set CC
	jmp	test		# Goto test
loop:
	mrmovq (%rdi), %r11	# x = *start
	rrmovq	%r10, %r12	
	subq	%r11, %r12	# y = -x
	cmovg	%r12, %r11	# if y > 0, x = y
	addq	%r10, %rax	# Add to sum
	addq	%r8, %rdi	# start++
	subq	%r9, %rsi	# Count--, Set CC
test:
	jne	loop		# Stop when 0
	ret			# Return