 1    assert(unsigned_high_prod(0, 0) == 0x0);
 2    assert(unsigned_high_prod(0, 1) == 0x0);
 3    assert(unsigned_high_prod(0, INT_MAX) == 0x0);
 4    assert(unsigned_high_prod(0, INT_MIN) == 0x0);
 5    assert(unsigned_high_prod(0, ~0) == 0x0);
 6    assert(unsigned_high_prod(1, 1) == 0x0);
 7    assert(unsigned_high_prod(1, INT_MAX) == 0x0);
* 8    assert(unsigned_high_prod(1, INT_MIN) == 0x0);
* 9    assert(unsigned_high_prod(1, ~0) == 0x0);
10    assert(unsigned_high_prod(INT_MAX, INT_MAX) == 0x3FFFFFFF);
* 11    assert(unsigned_high_prod(INT_MAX, INT_MIN) == 0x3FFFFFFF);
* 12    assert(unsigned_high_prod(INT_MAX, ~0) == 0x7FFFFFFE);
13    assert(unsigned_high_prod(INT_MIN, INT_MIN) == 0x40000000);
* 14    assert(unsigned_high_prod(INT_MIN, ~0) == 0x7FFFFFFF);

 1    assert(  signed_high_prod(0, 0) == 0x0);
 2    assert(  signed_high_prod(0, 1) == 0x0);
 3    assert(  signed_high_prod(0, INT_MAX) == 0x0);
 4    assert(  signed_high_prod(0, INT_MIN) == 0x0);
 5    assert(  signed_high_prod(0, ~0) == 0x0);
 6    assert(  signed_high_prod(1, 1) == 0x0);
 7    assert(  signed_high_prod(1, INT_MAX) == 0x0);
* 8    assert(  signed_high_prod(1, INT_MIN) == 0xFFFFFFFF);
* 9    assert(  signed_high_prod(1, ~0) == 0xFFFFFFFF);
10    assert(  signed_high_prod(INT_MAX, INT_MAX) == 0x3FFFFFFF);
* 11    assert(  signed_high_prod(INT_MAX, INT_MIN) == 0xC0000000);
* 12    assert(  signed_high_prod(INT_MAX, ~0) == 0xFFFFFFFF);
13    assert(  signed_high_prod(INT_MIN, INT_MIN) == 0x40000000);
* 14    assert(  signed_high_prod(INT_MIN, ~0) == 0x0);